#!/usr/bin/ruby

include Math

class Numeric
    def dB
        return 10r ** (self / 20r)
    end

    def to_dB
        return 20r * Math.log10(self)
    end
end

result = eval(ARGV.join(' '))
result_f = result.to_f

puts "#{result}" unless result.is_a?(Float) and result.finite?
if result_f.finite?
    puts "%.#{Float::DIG}f" % result_f unless result.is_a?(Integer)
    exp_str = "%.#{Float::DIG}e" % result_f
    puts exp_str
    e = exp_str.gsub(/^[^e]*e/, '').to_i
    e_si = (e / 3.0).floor * 3
    puts exp_str.gsub(/^([^.]*)\.([^e]{#{e - e_si}})([^e]*).*$/, "\\1\\2.\\3e#{"%+0.2d" % e_si}")
end
