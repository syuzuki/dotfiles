[atcoder]
submit_via_binary = false # submit via binary by default
use_cross = false         # use `cross` instead of `cargo` when generating binaries
binary_column = 80        # maximum column number of generated binary (0 for no wrapping)
update_interval = 1000    # interval time of fetching result (ms)
strip_path = "strip"      # specify `strip` command path. NOTE: if you use macOS, you have to install GNU strip and specify its path here.

[profile]
# target to use to generate binary
target = "x86_64-unknown-linux-musl"

[profile.release]
lto = true
panic = 'abort'

# dependencies added to new project
[dependencies]
num = "0.2.1"
num-bigint = "0.2.6"
num-complex = "0.2.4"
num-integer = "0.1.42"
num-iter = "0.1.40"
num-rational = "0.2.4"
num-traits = "0.2.11"

num-derive = "0.3.0"

# ndarray = "0.13.0"

# nalgebra = "0.20.0"
# alga = "0.9.3"

# libm = "0.2.1"

rand = "0.7.3"
getrandom = "0.1.14"
rand_chacha = "0.2.2"
rand_core = "0.5.1"
rand_hc = "0.2.0"
rand_pcg = "0.2.1"

rand_distr = "0.2.2"

# petgraph = "0.5.0"

indexmap = "1.3.2"

regex = "1.3.6"

lazy_static = "1.4.0"

ordered-float = "1.0.2"

ascii = "1.0.0"

permutohedron = "0.2.4"

superslice = "1.0.0"

itertools = "0.9.0"

itertools-num = "0.1.3"

maplit = "1.0.2"

either = "1.5.3"

# im-rc = "14.3.0"

fixedbitset = "0.2.0"

# bitset-fixed = "0.1.0"

proconio = { version = "0.3.6", features = ["derive"] }

# text_io = "0.1.8"

whiteread = "0.5.0"

rustc-hash = "1.1.0"

smallvec = "1.2.0"

[project]
# to create `rust-toolchain` file, uncomment this line.
# rustc_version = "1.15.1"

# source code template
template = """
#![allow(clippy::many_single_char_names)]

#[allow(unused_imports)]
use std::{f32, f64};
#[allow(unused_imports)]
use std::cmp::Ordering;
#[allow(unused_imports)]
use std::io::{stdin, BufRead};
#[allow(unused_imports)]
use std::ops::{Add, BitAnd, BitOr, BitXor, Div, Mul, Neg, Not, Rem, Shl, Shr, Sub};

#[allow(unused_imports)]
use num::{BigInt, BigUint, Complex};
#[allow(unused_imports)]
use indexmap::{indexmap, indexset, IndexMap, IndexSet};
#[allow(unused_imports)]
use regex::Regex;
#[allow(unused_imports)]
use lazy_static::lazy_static;
#[allow(unused_imports)]
use ordered_float::{NotNan, OrderedFloat};
#[allow(unused_imports)]
use permutohedron::{factorial, heap_recursive};
#[allow(unused_imports)]
use superslice::{Ext as _, Ext2 as _};
#[allow(unused_imports)]
use itertools::Itertools as _;
#[allow(unused_imports)]
use itertools_num::ItertoolsNum as _;
#[allow(unused_imports)]
use maplit::{btreemap, btreeset};
#[allow(unused_imports)]
use either::{Either, Left, Right};
#[allow(unused_imports)]
use fixedbitset::FixedBitSet;
#[allow(unused_imports)]
use proconio::{fastout, input};
#[allow(unused_imports)]
use proconio::marker::{Bytes, Chars, Isize1, Usize1};
#[allow(unused_imports)]
use proconio::source::{line::LineSource, Source};
#[allow(unused_imports)]
use rustc_hash::{FxHashMap as HashMap, FxHashSet as HashSet};
#[allow(unused_imports)]
use smallvec::SmallVec;

#[fastout]
fn main() {
    input! {
        a: i64,
    }

    println!("{}", a);
}
"""
